plotFolder <- here("images", "simulations")
library(here)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(grid)
library(RColorBrewer)
library(gplots)
library(reshape)
plotFolder <- here("images", "simulations")
if(!file.exists(plotFolder)) dir.create(plotFolder,recursive=TRUE)
knitr::opts_chunk$set(
cache=FALSE, autodep=FALSE, warning=FALSE, message=FALSE, echo=TRUE,
results = 'markup', dev='png', dpi=150, fig.align = "center", fig.path=paste0(plotFolder, "/"),
cache.path=".cache/",
duplicate.label="allow"
)
library(here)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(grid)
library(RColorBrewer)
library(gplots)
library(reshape)
plotFolder <- here("images", "simulations")
if(!file.exists(plotFolder)) dir.create(plotFolder,recursive=TRUE)
knitr::opts_chunk$set(
cache=FALSE, autodep=FALSE, warning=FALSE, message=FALSE, echo=TRUE,
results = 'markup', dev='png', dpi=150, fig.align = "center", fig.path=paste0(plotFolder, "/"),
cache.path=".cache/",
duplicate.label="allow"
)
GDSC_folder <- here("data", "GDSC")
# cancer data
RNAseq_rpkm <- read.csv(file=here(GDSC_folder, "GDSC_lung_RNAseq_rpkm.csv"), row.names = 1, header= TRUE)
names(RNAseq_rpkm) <- gsub("X", "", names(RNAseq_rpkm))
cl_meta <- read.csv(file=here(GDSC_folder, "GDSC_CellLine_lung_annotation.csv"), header=TRUE)
cl_meta <- cl_meta[cl_meta$COSMIC_ID %in% names(RNAseq_rpkm) & (!is.na(cl_meta$COSMIC_ID)), ]
# drug data
# Cancer drug response data
CDR_auc_bi <- read.csv(file=here(GDSC_folder, "GDSC_DrugResponse_binarized.csv"), row.names = 1, header= TRUE)
names(CDR_auc_bi) <- gsub("X", "", names(CDR_auc_bi))
#---------------------------------------------------
# 0. check cancer types
#---------------------------------------------------
table(cl_meta$cancer_type)
#---------------------------------------------------
# 1. focus on NSCLC and SCLC
#---------------------------------------------------
NSCLC_COSMIC <- cl_meta$COSMIC_ID[cl_meta$cancer_type == "NSCLC"]
NSCLC_COSMIC <- NSCLC_COSMIC[!is.na(NSCLC_COSMIC)]
SCLC_COSMIC  <- cl_meta$COSMIC_ID[cl_meta$cancer_type == "SCLC"]
SCLC_COSMIC <- SCLC_COSMIC[!is.na(SCLC_COSMIC)]
NSCLC_RNAseq <- RNAseq_rpkm %>% select(all_of(as.character(NSCLC_COSMIC)))
SCLC_RNAseq <- RNAseq_rpkm %>% select(all_of(as.character(SCLC_COSMIC)))
dim(NSCLC_RNAseq) # [1] 5703   76
RNAseq_sub_sample <- cbind(NSCLC_RNAseq, SCLC_RNAseq)
heatmap.2(as.matrix(RNAseq_sub_sample),
trace="none",
col = rev(colorRampPalette(brewer.pal(10, "RdYlBu"))(256)) ,
labRow=FALSE,
main = "Heatmap of cancer cell line data",
ColSideColors = c(rep("#00BFC4",76), rep("#F8766D", 62)),
key.title = "Color Key\n& Histogram",
key.xlab=NA,
keysize=1
)
legend(y=1.05, x=.12, xpd=TRUE,
legend = c("SCLC","NSCLC"),
col = c("#F8766D", "#00BFC4"),
lty= 1, lwd = 5, cex=.7
)
#---------------------------------------------------
# 2.1 select some consistently highly expressed or lowly expressed genes for each cancer type
#. 2.2.   select several genes with high expression variability for each cancer type
#. 2.3 keep these genes in the simulated data
#---------------------------------------------------
row_means <- apply(NSCLC_RNAseq, 1, mean)
row_vars <- apply(NSCLC_RNAseq, 1, var)
summary(row_means)
summary(row_vars)
NSCLC_consistently_expressed_genes <- row.names(NSCLC_RNAseq)[which(row_vars < 0.3 & (row_means < -0.4 | (-0.1 < row_means & row_means < 0.1) | row_means > 0.4 ))]
length(NSCLC_consistently_expressed_genes)
NSCLC_consistently_high_genes <- row.names(NSCLC_RNAseq)[which(row_vars < 0.3 & (row_means > 0.4 ))]
NSCLC_consistently_low_genes <- row.names(NSCLC_RNAseq)[which(row_vars < 0.3 & (row_means < -0.4 ))]
NSCLC_consistently_med_genes <- row.names(NSCLC_RNAseq)[which(row_vars < 0.3 & (-0.1 < row_means & row_means < 0.1))]
c(length(NSCLC_consistently_high_genes), length(NSCLC_consistently_low_genes), length(NSCLC_consistently_med_genes))
NSCLC_high_var_expressed_genes <- row.names(NSCLC_RNAseq)[which(row_vars > 3 )]
length(NSCLC_high_var_expressed_genes)
row_means <- apply(SCLC_RNAseq, 1, mean)
row_vars <- apply(SCLC_RNAseq, 1, var)
summary(row_means)
summary(row_vars)
SCLC_consistently_expressed_genes <- row.names(SCLC_RNAseq)[which(row_vars < 0.3 & (row_means < -1 | (-0.1 < row_means & row_means < 0.1) | row_means > 0.9 ))]
length(SCLC_consistently_expressed_genes)
SCLC_consistently_high_genes <- row.names(SCLC_RNAseq)[which(row_vars < 0.3 & (row_means > 0.9 ))]
SCLC_consistently_low_genes <- row.names(SCLC_RNAseq)[which(row_vars < 0.3 & (row_means < -1 ))]
SCLC_consistently_med_genes <- row.names(SCLC_RNAseq)[which(row_vars < 0.3 & (-0.1 < row_means & row_means < 0.1))]
c(length(SCLC_consistently_high_genes), length(SCLC_consistently_low_genes), length(SCLC_consistently_med_genes))
SCLC_high_var_expressed_genes <- row.names(SCLC_RNAseq)[which(row_vars > 5 )]
length(SCLC_high_var_expressed_genes)
all_selected_genes <- unique(c(NSCLC_consistently_expressed_genes, NSCLC_high_var_expressed_genes,
SCLC_consistently_expressed_genes,  SCLC_high_var_expressed_genes))
length(all_selected_genes)
length(c(NSCLC_consistently_expressed_genes, NSCLC_high_var_expressed_genes, SCLC_consistently_expressed_genes,  SCLC_high_var_expressed_genes))
#---------------------------------------------------
# 4. randomly pick 25 NSCLC and 25 SCLC, and keep selected genes
#---------------------------------------------------
set.seed(123)
NSCLC_COSMIC <- sample(cl_meta$COSMIC_ID[cl_meta$cancer_type == "NSCLC"], size=25)
SCLC_COSMIC  <- sample(cl_meta$COSMIC_ID[cl_meta$cancer_type == "SCLC"], size=25)
selected_COSMIC <- as.character(c(NSCLC_COSMIC, SCLC_COSMIC))
NSCLC_RNAseq_sub <- RNAseq_rpkm %>%
select(all_of(as.character(NSCLC_COSMIC))) %>%
t() %>% as.data.frame() %>%
select(all_of(all_selected_genes)) %>%
t() %>% as.data.frame()
dim(NSCLC_RNAseq_sub) # [1]  380  25
row_means <- apply(NSCLC_RNAseq_sub, 1, mean)
row_vars <- apply(NSCLC_RNAseq_sub, 1, var)
summary(row_means)
summary(row_vars)
SCLC_RNAseq_sub <- RNAseq_rpkm %>%
select(all_of(as.character(SCLC_COSMIC))) %>%
t() %>% as.data.frame() %>%
select(all_of(all_selected_genes)) %>%
t() %>% as.data.frame()
dim(SCLC_RNAseq_sub) # [1]  380  25
RNAseq_sub <- cbind(NSCLC_RNAseq_sub, SCLC_RNAseq_sub)
heatmap.2(as.matrix(RNAseq_sub),
trace="none",
col = rev(colorRampPalette(brewer.pal(10, "RdYlBu"))(256)) ,
labRow=FALSE,
main = "Heatmap of cancer cell line data",
ColSideColors = c(rep("#00BFC4",25), rep("#F8766D", 25)),
key.title = "Color Key\n& Histogram",
key.xlab=NA,
keysize=1
)
legend(y=1.05, x=.12, xpd=TRUE,
legend = c("SCLC","NSCLC"),
col = c("#F8766D", "#00BFC4"),
lty= 1, lwd = 5, cex=.7
)
p <- 10
# 10 drugs targeting the NSCLC
d1 <- cbind(1,1, matrix(rbinom(n=10 * 8, size = 1, prob = 0.2), nrow=10))
# 10 drags targeting the SCLC
d2 <- cbind(matrix(rbinom(n=10 * 2, size = 1, prob = 0.2), nrow=10), 1,1, matrix(rbinom(n=10 * 6, size = 1, prob = 0.2), nrow=10))
# 10 pan cancer drugs
d3 <- cbind(matrix(rbinom(n=10 * 4, size = 1, prob = 0.2), nrow=10), 1,1, matrix(rbinom(n=10 * 4, size = 1, prob = 0.2), nrow=10))
d_fp <- rbind(d1, d2, d3)
d_fp
names(d_fp) <- paste0("f", 1:10)
colnames(d_fp) <- paste0("d", 1:30)
dim(d_fp)
rownames(d_fp) <- paste0("d", 1:30)
d_fp
colnames(d_fp) <- paste0("f", 1:10)
rownames(d_fp) <- paste0("d", 1:30)
d_fp
p <- 10
# 10 drugs targeting the NSCLC
d1 <- cbind(1,1, matrix(rbinom(n=10 * 8, size = 1, prob = 0.2), nrow=10))
# 10 drags targeting the SCLC
d2 <- cbind(matrix(rbinom(n=10 * 2, size = 1, prob = 0.2), nrow=10), 1,1, matrix(rbinom(n=10 * 6, size = 1, prob = 0.2), nrow=10))
# 10 pan cancer drugs
d3 <- cbind(matrix(rbinom(n=10 * 4, size = 1, prob = 0.2), nrow=10), 1,1, matrix(rbinom(n=10 * 4, size = 1, prob = 0.2), nrow=10))
d_fp <- rbind(d1, d2, d3)
colnames(d_fp) <- paste0("f", 1:10)
rownames(d_fp) <- paste0("d", 1:30)
d_fp
set.seed(123)
p <- 10
# 10 drugs targeting the NSCLC
d1 <- cbind(1,1, matrix(rbinom(n=10 * 8, size = 1, prob = 0.2), nrow=10))
# 10 drags targeting the SCLC
d2 <- cbind(matrix(rbinom(n=10 * 2, size = 1, prob = 0.2), nrow=10), 1,1, matrix(rbinom(n=10 * 6, size = 1, prob = 0.2), nrow=10))
# 10 pan cancer drugs
d3 <- cbind(matrix(rbinom(n=10 * 4, size = 1, prob = 0.2), nrow=10), 1,1, matrix(rbinom(n=10 * 4, size = 1, prob = 0.2), nrow=10))
d_fp <- rbind(d1, d2, d3)
colnames(d_fp) <- paste0("f", 1:10)
rownames(d_fp) <- paste0("d", 1:30)
d_fp
NSCLC_RNAseq_sub[1:6,1:6]
#---------------------------------------------------
# one main function for each cancer type and one sub function
#---------------------------------------------------
# 1. for NSCLC
c(length(NSCLC_consistently_high_genes), length(NSCLC_consistently_low_genes), length(NSCLC_consistently_med_genes), length(NSCLC_high_var_expressed_genes))
mean(NSCLC_RNAseq_sub["SIDG36344",])
NSCLC_RNAseq_sub
NSCLC_RNAseq_sub["SIDG36344",]
mean(NSCLC_RNAseq_sub["SIDG36344",])
NSCLC_RNAseq_sub["SIDG36344",]$687815
c_f <- NSCLC_RNAseq_sub[,1]
c_f
t(NSCLC_RNAseq_sub)[1,]
t(NSCLC_RNAseq_sub)[1,]$SIDG36344
t(NSCLC_RNAseq_sub)[1,][SIDG36344]
t(NSCLC_RNAseq_sub)[1,]["SIDG36344"]
cdr <- as.numeric(d_f["f1"] * as.numeric(c_f["SIDG36344"] > 0.1) + d_f["f2"] * as.numeric(c_f["SIDG02177"] < -0.1) == 2)
RNAseq_sub[1:6,1:6]
RNAseq_sub %>% select(all_of(as.vector(type_2_cancer)))
